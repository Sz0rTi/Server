// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RESTServer.Data;

namespace RESTServer.Migrations
{
    [DbContext(typeof(MagazineContext))]
    [Migration("20190506191812_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RESTServer.Models.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RESTServer.Models.Client", b =>
                {
                    b.Property<long>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<string>("Mail");

                    b.Property<string>("Name");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RESTServer.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientId");

                    b.Property<long?>("ClientId1");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsPaid");

                    b.Property<DateTime>("PaymentDeadline");

                    b.Property<double>("Price");

                    b.HasKey("InvoiceId");

                    b.HasIndex("ClientId1");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("RESTServer.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<long?>("CategoryId1");

                    b.Property<string>("Description");

                    b.Property<int?>("InvoiceId");

                    b.Property<string>("Name");

                    b.Property<double>("PriceNetto");

                    b.Property<double>("TaxStageId");

                    b.Property<long?>("TaxStageId1");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId1");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TaxStageId1");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RESTServer.Models.ProductInOrder", b =>
                {
                    b.Property<long>("ProductInOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<long>("InvoiceId");

                    b.Property<int?>("InvoiceId1");

                    b.Property<double>("PricePerItem");

                    b.Property<long>("ProductId");

                    b.Property<long>("TaxStageId");

                    b.HasKey("ProductInOrderId");

                    b.HasIndex("InvoiceId1");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInOrders");
                });

            modelBuilder.Entity("RESTServer.Models.TaxStage", b =>
                {
                    b.Property<long>("TaxStageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Stage");

                    b.HasKey("TaxStageId");

                    b.ToTable("TaxStages");
                });

            modelBuilder.Entity("RESTServer.Models.Invoice", b =>
                {
                    b.HasOne("RESTServer.Models.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId1");
                });

            modelBuilder.Entity("RESTServer.Models.Product", b =>
                {
                    b.HasOne("RESTServer.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId1");

                    b.HasOne("RESTServer.Models.Invoice")
                        .WithMany("Products")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("RESTServer.Models.TaxStage", "TaxStage")
                        .WithMany("Product")
                        .HasForeignKey("TaxStageId1");
                });

            modelBuilder.Entity("RESTServer.Models.ProductInOrder", b =>
                {
                    b.HasOne("RESTServer.Models.Invoice", "Invoice")
                        .WithMany("ProductsList")
                        .HasForeignKey("InvoiceId1");

                    b.HasOne("RESTServer.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
