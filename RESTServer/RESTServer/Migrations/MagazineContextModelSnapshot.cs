// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RESTServer.Data;

namespace RESTServer.Migrations
{
    [DbContext(typeof(MagazineContext))]
    partial class MagazineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RESTServer.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RESTServer.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<string>("Mail");

                    b.Property<string>("NIP");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RESTServer.Models.InvoiceBuy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsPaid");

                    b.Property<double>("PriceBrutto");

                    b.Property<double>("PriceNetto");

                    b.Property<int>("SellerID");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("SellerID");

                    b.HasIndex("UserID");

                    b.ToTable("InvoicesBuy");
                });

            modelBuilder.Entity("RESTServer.Models.InvoiceSell", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientID");

                    b.Property<int?>("ClientID1");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsPaid");

                    b.Property<DateTime>("PaymentDeadline");

                    b.Property<double>("PriceBrutto");

                    b.Property<double>("PriceNetto");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("ClientID1");

                    b.HasIndex("UserID");

                    b.ToTable("InvoicesSell");
                });

            modelBuilder.Entity("RESTServer.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("CategoryID");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("PriceNetto");

                    b.Property<int>("TaxStageID");

                    b.Property<int>("UnitID");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("TaxStageID");

                    b.HasIndex("UnitID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RESTServer.Models.ProductBuy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("InvoiceBuyID");

                    b.Property<double>("PricePerItemBrutto");

                    b.Property<double>("PricePerItemNetto");

                    b.Property<int>("ProductID");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceBuyID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductsBuy");
                });

            modelBuilder.Entity("RESTServer.Models.ProductSell", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("InvoiceSellID");

                    b.Property<double>("PricePerItemBrutto");

                    b.Property<double>("PricePerItemNetto");

                    b.Property<int>("ProductID");

                    b.Property<int>("TaxStageID");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceSellID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductsSell");
                });

            modelBuilder.Entity("RESTServer.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RESTServer.Models.Seller", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("NIP");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("ID");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("RESTServer.Models.TaxStage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Stage");

                    b.HasKey("ID");

                    b.ToTable("TaxStages");
                });

            modelBuilder.Entity("RESTServer.Models.Unit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("RESTServer.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.Property<int>("RoleID");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RESTServer.Models.InvoiceBuy", b =>
                {
                    b.HasOne("RESTServer.Models.Seller", "Seller")
                        .WithMany("InvoicesBuy")
                        .HasForeignKey("SellerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RESTServer.Models.User", "User")
                        .WithMany("InvoicesBuy")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("RESTServer.Models.InvoiceSell", b =>
                {
                    b.HasOne("RESTServer.Models.Client", "Client")
                        .WithMany("InvoicesSell")
                        .HasForeignKey("ClientID1");

                    b.HasOne("RESTServer.Models.User", "User")
                        .WithMany("InvoicesSell")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("RESTServer.Models.Product", b =>
                {
                    b.HasOne("RESTServer.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RESTServer.Models.TaxStage", "TaxStage")
                        .WithMany("Product")
                        .HasForeignKey("TaxStageID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RESTServer.Models.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RESTServer.Models.ProductBuy", b =>
                {
                    b.HasOne("RESTServer.Models.InvoiceBuy", "InvoiceBuy")
                        .WithMany("ProductsBuy")
                        .HasForeignKey("InvoiceBuyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RESTServer.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RESTServer.Models.ProductSell", b =>
                {
                    b.HasOne("RESTServer.Models.InvoiceSell", "InvoiceSell")
                        .WithMany("ProductsSell")
                        .HasForeignKey("InvoiceSellID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RESTServer.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RESTServer.Models.User", b =>
                {
                    b.HasOne("RESTServer.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
